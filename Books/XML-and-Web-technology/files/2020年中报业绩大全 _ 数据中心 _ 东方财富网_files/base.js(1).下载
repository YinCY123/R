!function ($) {
    var numfun = {
        ///年报季报专用百分比转换，默认加颜色
        tobl: function (data, color, bs) {
            try {
                if (data === '' || data === undefined || data === null || data === '-' || isNaN(data) || !isFinite(data)) {
                    return '<span>-</span>';
                }
                var v = (bs || 1) * parseFloat(data);
                var str = (Math.abs(data)).toString().split('.');
                var numlen = str[0].replace('-', '').length;
                if (numlen>= 4) {
                    v = v.toFixed(0);
                } else if (numlen.length >= 3) {
                    v = v.toFixed(1);
                } else {
                    v = v.toFixed(2);
                }
                if (color === false)
                    return v;
                if (parseFloat(v) < 0)
                    return "<span class=\"green\">" + v + "</span>";
                else if (v > 0)
                    return "<span class=\"red\">" + v + "</span>";
                else return "<span>0.00</span>";
            } catch (err) {
                return '<span>-</span>'
            }
        },
        ///年报季报专用数值转换
        toamt: function (data) {
            try {
                if (data === '' || data === undefined || data === null || data === '-' || isNaN(data) || !isFinite(data)) {
                    return '-';
                }
                var m = Math.abs(data);
                if (m < 10) {
                    v = parseFloat((data / 1).toFixed(4));
                } else if (m < 100) {
                    v = parseFloat((data / 1).toFixed(2));
                } else if (m < 1000) {
                    v = parseFloat((data / 1).toFixed(1));
                } else if (m < 10000) {
                    v = parseFloat((data / 1).toFixed(0));
                } else if (m >= 10000 && m < 1000000) {
                    v = parseFloat((data / 10000).toFixed(2)) + "万";
                } else if (m >= 1000000 && m < 100000000) {
                    v = parseFloat((data / 10000).toFixed(0)) + "万";
                } else if (m >= 100000000 && m < 10000000000) {
                    v = parseFloat((data / 100000000).toFixed(2)) + "亿";
                } else if (m >= 10000000000 && m < 1000000000000) {
                    v = parseFloat((data / 100000000).toFixed(0)) + "亿";
                } else {
                    v = parseFloat((data / 1000000000000).toFixed(2)) + "万亿";
                }
                return v;
            } catch (err) {
                return '-'
            }
        },
        editBdfu: function (data1, data2) {
            var str = "";
            if (data1 != null) {
                var dl = data1;
                if (dl > 0)
                    str += "<span class='red'>" + dl + "%</span>";
                else if (dl < 0)
                    str += "<span class='green'>" + dl + "%</span>";
                else
                    str += "<span>" + dl + "%</span>";
            }
            if (data2 != null) {
                if (data1 == data2) {
                    return str;
                }
                if (data1 != null) str += "～";
                var dl = data2;
                if (dl > 0)
                    str += "<span class='red'>" + dl + "%</span>";
                else if (dl < 0)
                    str += "<span class='green'>" + dl + "%</span>";
                else
                    str += "<span>" + dl + "%</span>";
            }
            if ((!data1 && !data2) || (data1 == null && data2 == null)) {
                str = "-";
            }
            return str;
        },
        editjlr: function (data1, data2) {
            var value = "";
            if (data1 != null) {
                value += this.toamt(data1);
            }
            if (data2!= null) {
                if (data1 == data2) {
                    return value;
                }
                if (data1 != null) value += "～";
                value += this.toamt(data2);
            };
            if (data1 == null && data2 == null) {
                value = "-";
            }
            return value;
        }

    }
    window.numfun = numfun;


    var bbsjfun = {
        resetSlt: function (_cont) {
            if (!_cont)
                _cont = $(".cateday_cont2");
            _cont.find('.filter_more ul').on('click', 'li', function (event) {
                var tli = $(this).detach();
                var last = $('.last_li', _cont).removeClass("last_li").detach();
                tli.addClass("last_li");
                $(".filter_ul", _cont).append(tli);
                $('.' + last.attr("szm"), _cont).length ? $('.' + last.attr("szm"), _cont).after(last) : $(".hover_ul", _cont).append(last);;
                tli.addClass('at2').siblings().removeClass('at2');
                !_cont.find(".hover_ul li[szm='" + tli.attr("szm") + "']").length && _cont.find(".hover_ul ." + tli.attr("szm")).hide();
                _cont.find(".hover_ul ." + last.attr("szm")).show();
                _cont.find('.hover_ul').hide();
            });
            $(".filter_more ul").hover(function () {
                jQuery(this).addClass('hover').show();
            }, function () {
                jQuery(this).removeClass('hover').hide();
            });

            $(".filter_more").on('mouseenter', function (event) {
                var o = jQuery(this);
                setTimeout(function () {
                    o.find('ul').show();
                }, 100)
            }).on('mouseleave', function (event) {
                var o = jQuery(this);
                setTimeout(function () {
                    if (!o.find('ul').hasClass('hover')) {
                        o.find('ul').hide();
                    }
                }, 100)
            });
        },
        setbgqtext: function (date) {
            var quarter = date.substr(0, 4) + "年";
            // 编辑显示的季度
            if (date.indexOf("12-31") != -1)
                quarter += "年";
            else if (date.indexOf("09-30") != -1)
                quarter += "三季";
            else if (date.indexOf("06-30") != -1)
                quarter += "中";
            else if (date.indexOf("03-31") != -1)
                quarter += "一季";
            document.title = quarter + "报业绩大全 _ 数据中心 _ 东方财富网";
            $("#topTit").text(quarter + "报业绩大全");
        },
        getparam: function (val, name) {
            var reg = new RegExp("(^\\()" + name + "=([^\\)]*)", "i");
            var r = val.match(reg);
            if (r != null)
                return decodeURIComponent(r[2]).replace(/'|"/g, "");
        },
        tabevent: function () {
            $(".catemk li").click(function () {
                var type = $(this).data("type");
                if (type)
                    if (window.dateVal)
                        window.location.href = "/bbsj/" + dateVal.replace(/-/g, "").substring(0, 6) + "/" + type + ".html";
                    else if (window.stockcode)
                        window.location.href = "/bbsj/" + type + "/" + stockcode + ".html";
            })
        },
        mkt_type: {
            "hsa": "(SECURITY_TYPE_CODE=%22058001001%22)",
            "sha": "(SECURITY_TYPE_CODE=%22058001001%22)(TRADE_MARKET_CODE in (%22069001001001%22,%22069001001003%22))",
            "sza": "(SECURITY_TYPE_CODE=%22058001001%22)(TRADE_MARKET_CODE in (%22069001002001%22,%22069001002002%22,%22069001002003%22,%22069001002005%22))",
            "szb": "(SECURITY_TYPE_CODE=%22058001001%22)(TRADE_MARKET_CODE=%22069001002001%22)",
            "cyb": "(SECURITY_TYPE_CODE=%22058001001%22)(TRADE_MARKET_CODE=%22069001002002%22)",
            "kcb": "(SECURITY_TYPE_CODE=%22058001001%22)(TRADE_MARKET_CODE=%22069001001006%22)",
            "zxb": "(SECURITY_TYPE_CODE=%22058001001%22)(TRADE_MARKET_CODE=%22069001002003%22)",
            "stb": "(TRADE_MARKET_CODE in(%22069001001003%22,%22069001002005%22))",
            "bg": "(SECURITY_TYPE_CODE=%22058001002%22)",
            "sb": "(SECURITY_TYPE_CODE=%22058001005%22)"
        }
    }
    window.bbsjfun = bbsjfun;
}(jQuery)