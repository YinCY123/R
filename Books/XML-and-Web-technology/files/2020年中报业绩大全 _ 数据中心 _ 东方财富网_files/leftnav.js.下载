; (function ($, window, undefined) {

    // Array.prototype.removeItem = function (val) {
    //     var index = this.indexOf(val);
    //     if (index > -1) {
    //         this.splice(index, 1);
    //     }
    // };

    function removeItem(arr, val) {
        var index = arr.indexOf(val);
        if (index > -1) {
            arr.splice(index, 1);
        }
        return arr;
    };

    var leftNavFun = {
        //设置二级菜单距离浏览器底部距离
        setDomMarginBottom: function (obj) {
            obj.css('top', '0px');
            var xh = $(window).height() - (obj.height() + obj.offset().top - $(document).scrollTop()) - 30;//dom距离窗口底部的距离 
            if (xh < 0) { obj.css('top', '' + xh + 'px') };
        },
        //去除数组重复元素
        uniqueArr: function (arr) {
            var temp = [];
            for (var i = 0; i < arr.length; i++) {
                if (temp.indexOf(arr[i]) == -1) {
                    temp.push(arr[i]);
                }
            }
            return temp;
        },
        getCookie: function (sName) {
            var cookies = document.cookie;
            if (cookies == null || cookies == "undefined") {
                return null;
            };
            var aCookie = cookies.split("; ");
            var value = null;
            for (var i = 0; i < aCookie.length; i++) {
                var aCrumb = aCookie[i].split("=");
                if (sName == aCrumb[0]) {
                    value = aCrumb[1];
                    break;
                }
            }
            if (value == null || value == "undefined" || value.length == 0) return null;
            return decodeURIComponent(value);
        },
        //删除我的数据后更新其他模块的样式显示
        frashInfos: function () {
            $('.left_star_f').each(function (i) {
                var _that = this;
                var curKey = $(_that).data('key');
                if (collectArr.indexOf(curKey) > -1) {

                } else {
                    $(_that).removeClass('left_star_f').addClass('left_star');
                }
            })
        },
        //点击收藏，动态添加数据到‘我的数据模块’
        insertMydata: function (text, data, link) {
            if (collectArr.indexOf(data) != -1) return;
            collectArr.push(data);
            var $li = '<li id="" class="item">' +
                '<span class="icons icon_move"></span>' +
                '<a href="' + link + '">' +
                '<span class="t">' + text + '</span>' +
                '</a>' +
                // '<span class="icons icon_new"></span>' +
                '<span class="icons icon_delete" data-key="' + data + '"></span>' +
                '</li>';
            $('#my_data_infos').prepend($li);
        },
        //我的数据删除
        removeMydata: function (name) {
            $('#my_data_infos').find('li').each(function (i) {
                var $name = $(this).find('.t').text();
                if (name == $name) {
                    $(this).remove();
                }
            })
        },
        //校验需要登陆弹窗
        checkLogin: function () {
            new confirm({
                mask: false,//遮罩
                confirmText: '确定',
                cancelText: '取消',
                title: "登录提示",
                content: "收藏功能登录后可使用",
                confirm: function (e) {
                    window.open('https://passport2.eastmoney.com/pub/login?backurl=' + location.href)
                    e.remove();
                },
                cancel: function (e) {
                    e.remove();
                }
            })
        }
    };

    //全景图
    $('.qjbox').hover(function () {
        //设置元素距离底部距离
        var obj = $(this).find('.nav_wrap_block');
        obj.css('width', 146 * (qjdatas.length) + 'px');
        if (qjdatas.length == 0) obj.css('display', 'none');
        leftNavFun.setDomMarginBottom(obj);
    });

    //一级菜单hover延时处理以及hover样式处理
    var hoverTimer, outTimer;
    $('.firstlevel').hover(function () {
        var curClass = $(this).find('.root-link').find('span').first().attr('class').split(' ')[1];
        $(this).find('.root-link').find('span').first().addClass(curClass + '_f');
        /** */
        var that = this;
        clearTimeout(outTimer);
        hoverTimer = setTimeout(function () {
            $(that).siblings().find('.child-block').css('display', 'none');
            $(that).find('.child-block').css('display', 'block');
            leftNavFun.setDomMarginBottom($(that).find('.child-block'));
        }, 50);
    }, function () {
        var _f = $(this).find('.root-link').find('span').first().attr('class').split(' ')[2];
        $(this).find('.root-link').find('span').first().removeClass(_f)
        /** */
        var that = this;
        clearTimeout(hoverTimer);
        outTimer = setTimeout(function () {
            $(that).find('.child-block').css('display', 'none')
        }, 50);
    });
    $(".leftnav").mouseenter(function () {

    }).mouseleave(function () {
        $(this).find('.child-block').css('display', 'none');
    });

    if (typeof page_type != 'undefined' && page_type) {
        $('.leftnav .firstlevel span[data-key="' + page_type + '"]').prev("a").find("span").addClass("red");

    }
    var uidal = leftNavFun.getCookie('uidal') ? leftNavFun.getCookie('uidal').slice(0, 16) : '';
    //控制我的数据子模块显示
    $('.mydata').hover(function () {
        if (!uidal) {
            $('.mydata .tips').css('display', 'block');
            $('.mydata .tips').find('a').attr('href', 'https://passport2.eastmoney.com/pub/login?backurl=' + window.location.href)
            return
        };
        if ($('.left_mydata_block').find('li').length < 1) {
            $('.nodata').css('display', 'block')
            $('.left_mydata_block').css('display', 'none')
        } else {
            $('.left_mydata_block').css('display', 'block');
            var _h = $('.left_mydata_block').height();
            if (_h >= 800) {
                $('.left_mydata_block').css('overflow', 'auto');
            } else {
                $('.left_mydata_block').css('overflow', 'hidden');
            }
        }
        var obj = $(this).find('.left_mydata_block');
        leftNavFun.setDomMarginBottom(obj);
        // $('.left_mydata_block').mCustomScrollbar({theme: "minimal-dark"});
    }, function () {
        $('.left_mydata_block').css('display', 'none');
        $('.mydata .tips').css('display', 'none');
        $('.nodata').css('display', 'none');
    });
    $('.myhome').on('click', function () {
        window.location.href = "http://data.eastmoney.com/";
    })


    //控制icon
    $('.myhome').hover(function () {
        $(this).find('span:first').removeClass('icon_home').addClass('icon_home_f')
    }, function () {
        $(this).find('span:first').removeClass('icon_home_f').addClass('icon_home')
    })
    $('.mydata').hover(function () {
        $(this).find('span:first').removeClass('icon_top_mydata').addClass('icon_top_mydata_f')
    }, function () {
        $(this).find('span:first').removeClass('icon_top_mydata_f').addClass('icon_top_mydata')
    })

    //获取全量收藏信息
    var collectArr = [];//存储我的数据数组
    (function getCollectInfos() {
        if (!uidal) return;
        $.ajax({
            url: "//dcfm.eastmoney.com/mydata/api/get/" + uidal,
            method: "GET",
            dataType: "jsonp",
            success: function (msg) {
                if (msg.Status == 1 && msg.Result) {
                    collectArr = leftNavFun.uniqueArr(msg.Result.split(','));

                    // collectArr = msg.Result.split(',');
                    //console.log(collectArr);
                    renderMyData();
                } else {
                    result = "";
                }
            },
            error: function (err) { }
        });
    })();

    // 收藏和取消收藏都是全量提交,公用一个接口
    var tempArr = [];
    $('.left_star').on('click', function (e) {
        if (!uidal) {
            leftNavFun.checkLogin();
            return;
        };
        var _that = $(this);
        var key = "";
        if (_that.attr('class') == 'left_star') {
            var as = collectArr.join(',');
            key = _that.data('key') + ',' + collectArr.join(',');
            // collectArr.push(_that.data('key'));
            tempArr.push(_that.data('key'))
        } else {
            //collectArr.removeItem(_that.data('key'));
            collectArr = removeItem(collectArr, _that.data('key'));
            key = collectArr.join(',');
            // tempArr.removeItem(_that.data('key'));
            tempArr = removeItem(tempArr, _that.data('key'));
        };
        //提出来，默认成功，先刷新样式
        if (_that.attr('class') == 'left_star') {
            // collectArr.push(_that.data('key'));
            _that.removeClass('left_star').addClass('left_star_f');
            leftNavFun.insertMydata(_that.data('name'), _that.data('key'), _that.prev().attr('href'));
        } else {
            _that.removeClass('left_star_f').addClass('left_star');
            var curKey = _that.data('key');
            if (tempArr.indexOf(curKey) == -1) {
                leftNavFun.removeMydata(_that.data('name'));
            }
        }

        $.ajax({
            url: "//dcfm.eastmoney.com/mydata/api/set/" + uidal + "?data=" + key,
            method: "GET",
            dataType: "jsonp",
            success: function (msg) {
                if (msg.Status == 1) { }
            },
            error: function (err) {
                console.log('faild');
            }
        });
    });

    //我的数据-删除(全量提交)
    $('#my_data_infos').on('click', '.icon_delete', function () {
        var _that = this;
        // collectArr.removeItem($(_that).data('key'));
        collectArr = removeItem(collectArr, $(_that).data('key'));
        key = collectArr.join(',');
        // console.log(key)
        new confirm({
            mask: false,
            confirmText: '确定',
            cancelText: '取消',
            confirm: function (e) {
                //默认成功
                $(_that).parent('li').remove();
                leftNavFun.frashInfos();
                e.remove();

                $.ajax({
                    url: "//dcfm.eastmoney.com/mydata/api/set/" + uidal + "?data=" + key,
                    method: "GET",
                    dataType: "jsonp",
                    success: function (msg) {
                        // $(_that).parent('li').remove();
                        // leftNavFun.frashInfos();
                        window.tempaddmydataspanhtml && window.tempaddmydataspanhtml.text("+加入我的数据").addClass("add");
                    },
                    error: function (err) {
                        console.log('faild');
                    }
                });
            },
            cancel: function (e) {
                e.remove();
            }
        })
    });

    //全景图模块筛选
    //var qjdatas = JSON.parse(qjdata);
    var qjdatas = typeof (qjdata) == "string" ? JSON.parse(qjdata) : qjdata;
    //渲染全景图模块
    function addQJDom(val, hasMatch) {
        var $childHtml = "";
        for (var i = 0; i < qjdatas.length; i++) {
            var $li = "";
            for (var j = 0; j < qjdatas[i].length; j++) {
                var str = qjdatas[i][j].name;
                if (str.indexOf(val) != -1) {
                    hasMatch = true
                    str = str.replace(val, '<span style="color:red">' + val + '</span>');
                };
                var newHtml = "";
                newHtml = qjdatas[i][j].newClass ? '<span class="left_icon_new" style="top:6px;right:0"></span>' : '';
                // var hotHtml = "";
                // if (qjdatas[i][j].classname) {
                //     hotHtml = '<span class="left_icon_hot"></span>'
                // } else {
                //     hotHtml = "";
                // }
                $li += '<li><span class="label">' + qjdatas[i][j].character + '</span><a href="' + qjdatas[i][j].link + '"  tracker-eventcode="sjpd_sjzxsy_zcdhlqjtqy_qydj"><span class="item_name">' + str + '</span>' + newHtml + '</a></li>'
            };
            if (i == 0) {
                var inputHtml = '<div style="height:25px;"></div>';
            } else {
                var inputHtml = '';
            }
            $childHtml += '<div class="nav_block" style="float:left;">' + inputHtml + '<ul>' + $li + '</ul></div>';
        };
        if (!hasMatch) return;
        $('.navbox').empty().append($childHtml);
    }
    addQJDom('', true);

    var preVal = "";
    var changeProperty = function () {
        var val = document.getElementById('qjinput').value;
        if (preVal == val) return; //避免ie11死循环控制
        preVal = val;
        //var isCharacters = new RegExp("^[\u4E00-\u9FA5]{1,8}$");//验证输入值是否是汉字
        var hasMatch = false;//该字段用来判断是否有匹配的字段，如没有则不进行页面重绘
        addQJDom(val, hasMatch);
    };
    $('#qjinput').on("input propertychange", changeProperty);

    //拖拽回调函数
    function dragCallback() {
        var $li = $('#my_data_infos').find('li');
        var dragArr = [];
        $li.each(function (i) {
            var key = $(this).find('.icon_delete').data('key');
            dragArr.push(key)
        });
        var dataKey = dragArr.join(',');
        $.ajax({
            url: "//dcfm.eastmoney.com/mydata/api/set/" + uidal + "?data=" + dataKey,
            method: "GET",
            dataType: "jsonp",
            success: function (msg) { console.log('success'); },
            error: function (err) { console.log('faild'); }
        });
    };

    function renderMyData() {
        collectArr.forEach(function (v) {
            var mydataStr = ""; var arr = []
            $('.child-block').each(function (i) {
                var that = this;
                if (i > 0) {
                    $(that).find('li').each(function (i) {
                        var _that = this;
                        var curKey = $(_that).find('.left_star').data('key');
                        var text = $(_that).find('.t_info').text();
                        var link = $(_that).find('a').attr('href');
                        if (v === curKey) {
                            if (arr.indexOf(curKey) == -1) {
                                //插入数据到我的模块
                                arr.push(curKey);
                                mydataStr += '<li id="" class="item">' +
                                    '<span class="icons icon_move"></span>' +
                                    '<a href="' + link + '"   tracker-eventcode="sjpd_sjzxsy_zcdhlqy_qydj">' +
                                    '<span class="t">' + text + '</span>' +
                                    '</a>' +
                                    // '<span class="icons icon_new"></span>' +
                                    '<span class="icons icon_delete" data-key="' + curKey + '"></span>' +
                                    '</li>';
                            }

                        };
                    })
                }
            })
            $(".left_mydata_block ul").append(mydataStr)
        });

        $('.child-block ul li').each(function (i) {
            var _that = this;
            var curKey = $(_that).find('.left_star').data('key');
            var text = $(_that).find('.t_info').text();
            collectArr.forEach(function (v) {
                if (v === curKey) {
                    //已收藏添加标记样式
                    $(_that).find('.left_star').removeClass('left_star').addClass('left_star_f');
                }
            })
        });
        if (window.pageCollectquery && window.page_type) {
            html = $('<button id="markBtn" class="add">+加入我的数据</button>');
            if (collectArr.indexOf(window.page_type) > -1) {
                html = $('<button id="markBtn">-移出我的数据</button>');
            }
            html.addClass("page_collect_btn");
            $(pageCollectquery).append(html);
            window.tempaddmydataspanhtml = html;
            html.click(function () {
                if (html.hasClass("add")) {
                    $('#leftnav span[data-key="' + window.page_type + '"]').click();
                    html.text("-移出我的数据");
                    html.removeClass("add");
                }
                else {
                    var delspan = $('#my_data_infos span[data-key="' + window.page_type + '"]');
                    $('#my_data_infos span[data-key="' + window.page_type + '"]').click();
                }
            })
        }

    };

    //控制导航栏与窗口的定位
    var _leftTop = $('.leftnav-block').offset().top;
    var _mainFrameH = $('.mainFrame').height();
    var _navH = $('.leftnav-block').height() + 35;
    $(window).scroll(function () {
        _leftTop = _leftTop ? _leftTop : $('.leftnav-block').offset().top;
        _mainFrameH = _mainFrameH ? _mainFrameH : $('.mainFrame').height();
        _navH = _navH ? _navH : $('.leftnav-block').height() + 35;
        var srollPos = $(window).scrollTop();
        var mainFrameOF = $('.mainFrame').offset().top;
        var _docH = $(document).height();
        var _mainFrameB = _docH - mainFrameOF - 30 - _mainFrameH;
        if (srollPos > _leftTop) {
            var newTop = "";
            var marTop = _docH - srollPos - _mainFrameH - _mainFrameB;
            newTop = marTop < _navH ? -(_navH - marTop) : 33;
            $('.leftnav-block').css({ 'position': 'fixed', 'top': newTop + 'px' })
        } else {
            $('.leftnav-block').css({ 'position': 'absolute', 'top': '' })
        }
    });

    $(document).ready(function () {
        //移动:初始化注册拖拽对象
        new sortTable({
            el: '#my_data_infos',
            itemTarget: '.icon_move',
            delay: 1000,//回调延迟执行时间
            callback: function () {
                dragCallback();
            }
        });
    });

    // 弹窗事件
    function confirm(option) {
        var defaultOption = {
            title: '确认删除',
            content: '确认删除选择的数据？',
            mask: true,
            height: '120',
            width: '230',
            confirm: null,
            cancel: null
        }
        this.option = $.extend({}, defaultOption, option)
        this.init();
    }
    confirm.prototype = {
        init: function () {
            var _self = this;
            this.winHeight = $(window).outerHeight();
            this.windWidth = $(window).outerWidth();
            var html = '<div class="comfirm_model">';

            if (this.option.mask) {
                html += '<div class="comfirm_mask" style="width:100%;height:100%;background:#000;opacity:0.5;"></div>';
            }
            html += '<div class="comfirm_container">' +
                '<div class="comfirm_header"><div class="comfirm_tit">' + this.option.title + '</div><div class="confirm_more"><i class="icon_close"></i></div></div>' +
                '<div class="confirm_content">' + this.option.content + '</div>' +
                '<div class="confirm_foot">';
            if (this.option.confirmText) {
                html += '<button class=" btn-confirm">' + this.option.confirmText + '</botton>';
            }
            if (this.option.cancelText) {
                html += '<button class=" btn-cancel">' + this.option.cancelText + '</botton></div>';
            }
            html += '</div></div></div>';
            this.html = $(html)
            $('body').append(this.html);
            this.html.css({
                "position": "fixed",
                "top": "0",
                "left": "0",
                "height": this.winHeight + 'px',
                "width": this.windWidth + 'px',
                "z-index": "9999"
            })

            $('.comfirm_container', this.html).css({
                "position": "absolute",
                "top": "50%",
                "left": "50%",
                "height": _self.option.height + 'px',
                "width": _self.option.width + 'px',
                "margin-top": '-' + _self.option.height / 2 + 'px',
                "margin-left": '-' + _self.option.width / 2 + 'px'
            })

            this.html.on('click', '.icon_close', function () {
                _self.remove();
            })

            this.html.on('click', '.btn-confirm', function () {
                if (typeof _self.option.confirm === 'function') {
                    _self.option.confirm(_self);
                }
            })

            this.html.on('click', '.btn-cancel', function () {
                if (typeof _self.option.cancel === 'function') {
                    _self.option.cancel(_self);
                }
            })
        },
        remove: function () {
            if (this.html) {
                this.html.remove();
            }
        }
    }


    // 拖拽
    var eventNames = {
        start: "touchstart.sortable mousedown.sortable",
        drop: "touchend.sortable touchcancel.sortable mouseup.sortable",
        drag: "touchmove.sortable mousemove.sortable",
        scroll: "scroll.sortable"
    }
    function sortTable(option) {
        var defaultOption = {
            el: '#sort',
            itemSelector: 'li',
            itemTarget: 'li',
            placeholderClass: 'placeholder',
            dragClass: 'dragged',
            bodyClass: 'dragging',
            delay: 1000,
            callback: null
        }

        this.option = $.extend({}, defaultOption, option)
        this.handle = this.option.itemTarget;
        this.target = $(this.option.el);

        this.target.on(eventNames.start, this.handle, $.proxy(this.dragInit, this))
    }
    sortTable.prototype = {
        dragInit: function (e) {
            document.body.onselectstart = document.body.ondrag = function () {
                return false;
            }
            if (this.seter) {
                window.clearTimeout(this.seter);
            }

            this.document = $(document)
            var closetItem = $(e.target).closest(this.option.itemSelector);
            // console.log(closetItem)
            if (closetItem.length) {
                this.item = closetItem;
                this.dragProxy = $.proxy(this.drag, this)
                this.dropProxy = $.proxy(this.drop, this)
                var placeholder = document.createElement(this.option.itemSelector)
                placeholder.className = this.option.placeholderClass;
                this.placeholder = $(placeholder);
                this.placeholder.css({
                    height: this.item.outerHeight(),
                    width: this.item.outerWidth()
                })
                this.setPointer(e);
                this.toggleListeners('on')
                this.dragInitDone = true;
            }
        },
        drag: function (e) {
            var _self = this;
            if (!this.dragging) {
                this.item.css({
                    height: this.item.outerHeight(),
                    width: this.item.outerWidth(),
                    position: 'absolute'
                })
                this.item.addClass(this.option.dragClass)
                $("body").addClass(this.option.bodyClass)
                this.item.before(this.placeholder)
                this.dragging = true;
            }

            this.setPointer(e);
            this.item.css(this.getRelativePosition(this.pointer, this.item.offsetParent()));
            // this.item.css({'display':'none'});

            var items = this.target.find(this.option.itemSelector).filter(":not(." + this.option.placeholderClass + ",." + this.option.dragClass + ")");

            var itemFirst = items.eq(0)
            if (itemFirst.length > 0) {
                var itemFirstY = itemFirst.offset().top + itemFirst.outerHeight();
            }

            if (_self.pointer.top < itemFirstY && itemFirst.length > 0) {
                itemFirst.before(_self.placeholder)
            }

            items.each(function () {
                var $li = $(this);
                var y = $li.offset().top;
                if (_self.pointer.top > y) {
                    $li.after(_self.placeholder)
                }
            })
        },
        drop: function (e) {
            var _self = this;
            this.toggleListeners('off')

            this.dragInitDone = false;
            if (this.dragging) {
                this.placeholder.before(this.item).detach();
                this.item.removeClass(this.option.dragClass).removeAttr("style")
                $("body").removeClass(this.option.bodyClass)

                this.dragging = false
                this.seter = setTimeout(function () {
                    _self.option.callback && _self.option.callback();
                }, _self.option.delay)
            }
            document.body.onselectstart = document.body.ondrag = function () {
                return true;
            }
        },

        getPointer: function (e) {
            var o = e.originalEvent || e.originalEvent.touches && e.originalEvent.touches[0]
            return {
                left: e.pageX || o.pageX,
                top: e.pageY || o.pageY
            }
        },
        setPointer: function (e) {
            var pointer = this.getPointer(e);
            this.lastPointer = this.pointer;
            this.pointer = pointer;
        },
        getRelativePosition: function (pointer, element) {
            var offset = element.offset();
            return {
                left: pointer.left - offset.left,
                top: pointer.top - offset.top
            }
        },
        toggleListeners: function (method) {
            var _self = this;
            events = ['drag', 'drop']
            $.each(events, function (i, event) {
                _self.document[method](eventNames[event], _self[event + 'Proxy'])
            })
        }
    };

})(jQuery, window, undefined)

